import Footer from "@/components/Footer";
import { Header } from "@/components/Header";
import Masthead from "@/components/Masthead";
import SearchBar from "@/components/SearchBar";
import { extract } from "@/lib/i18n/utils";
import { cn } from "@/lib/ui/utils";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { ThemeProvider } from "next-themes";
import { Inter, Poppins } from "next/font/google";
import "./globals.css";

type Props = {
  children: React.ReactNode;
  params: { locale: string };
};

const inter = Inter({
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
  display: "swap",
  variable: "--font-inter",
});

const poppins = Poppins({
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
  display: "swap",
  variable: "--font-poppins",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function Layout({ children, params }: Readonly<Props>) {
  const messages = await getMessages();

  return (
    <html lang="en">
      <body className={cn(inter.className, poppins.variable)}>
        <ThemeProvider defaultTheme="light">
          <NextIntlClientProvider messages={messages}>
            <div className="flex h-[100vh] flex-col">
              <Masthead />
              <Header locale={params.locale} />
              <SearchBar></SearchBar>
              <div className="flex-1">{children}</div>
              <Footer
                ministry={extract(messages, "common.names.kd")}
                descriptionWithNewlines={extract(
                  messages,
                  "components.Footer.address"
                )}
                links={
                  [
                    // Put links here
                  ]
                }
                showLastUpdated
              />
            </div>
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
