name: Deploy Payload CMS

on:
  push:
    branches:
      - staging
      - staging-cms
  workflow_dispatch:

env:
  REGION: "${{ vars.STAGING_GCP_REGION }}"
  SERVICE: "${{ vars.STAGING_GCP_SERVICE_NAME_CMS }}"
  PROJECT_ID: "${{ vars.STAGING_GCP_PROJECT_ID }}"
  SERVICE_ACCOUNT: "${{ secrets.STAGING_GCP_SERVICE_ACCOUNT }}"
  DATABASE_URI: "${{ secrets.STAGING_DATABASE_URI }}"
  PAYLOAD_SECRET: "${{ secrets.STAGING_PAYLOAD_SECRET }}"
  WIF_PROVIDER: "${{ secrets.STAGING_WIF_PROVIDER }}"
  PAYLOAD_PUBLIC_WEBHOOK_API_HOST: "${{ vars.STAGING_PAYLOAD_PUBLIC_WEBHOOK_API_HOST }}"
  SERVICE_DATABASE: "${{ vars.STAGING_SERVICE_DATABASE }}"

jobs:
  deploy:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy Dockerfile
        run: cp ./apps/cms/Dockerfile .

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: "${{ env.SERVICE_ACCOUNT }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          flags: "--platform=managed --min-instances=0 --allow-unauthenticated"
          # Use the appropriate source folder
          source: ./
          env_vars: |-
            DATABASE_URI=${{ env.DATABASE_URI }}
            PAYLOAD_SECRET=${{ env.PAYLOAD_SECRET }}
            PAYLOAD_PUBLIC_WEBHOOK_API_HOST=${{ env.PAYLOAD_PUBLIC_WEBHOOK_API_HOST }}
            SERVICE_DATABASE=${{ env.SERVICE_DATABASE }}
