name: Deploy Payload CMS

on:
  push:
    branches:
      - staging
      - staging-cms
  workflow_dispatch:

env:
  REGION: "${{ vars.STAGING_GCP_REGION }}"
  SERVICE: "${{ vars.STAGING_GCP_SERVICE_NAME_CMS }}"
  GAR_REPOSITORY: "${{ vars.STAGING_GCP_GAR_REPOSITORY }}"
  GAR_LOCATION: "${{ vars.STAGING_GCP_GAR_LOCATION }}"
  GAR_USER: "${{ vars.STAGING_GCP_GAR_USER }}"
  PROJECT_ID: "${{ vars.STAGING_GCP_PROJECT_ID }}"
  SERVICE_ACCOUNT: "${{ secrets.STAGING_GCP_SERVICE_ACCOUNT }}"
  DATABASE_URI: "${{ secrets.STAGING_DATABASE_URI }}"
  PAYLOAD_SECRET: "${{ secrets.STAGING_PAYLOAD_SECRET }}"
  WIF_PROVIDER: "${{ secrets.STAGING_WIF_PROVIDER }}"
  PAYLOAD_PUBLIC_WEBHOOK_API_HOST: "${{ vars.STAGING_PAYLOAD_PUBLIC_WEBHOOK_API_HOST }}"
  SERVICE_DATABASE: "${{ vars.STAGING_SERVICE_DATABASE }}"

jobs:
  deploy:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy Dockerfile
        run: cp ./apps/cms/Dockerfile .

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ env.WIF_PROVIDER }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v2"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Set tag name
        id: tag
        run: |-
          echo "name=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GAR_USER }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" \
            >> $GITHUB_OUTPUT

      - name: Build and Push Container
        run: |-
          docker build \
            -t "${{ steps.tag.outputs.name }}" \
            --build-arg PAYLOAD_PUBLIC_WEBHOOK_API_HOST=${{ env.PAYLOAD_PUBLIC_WEBHOOK_API_HOST }} \
            .
          docker push ${{ steps.tag.outputs.name }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ env.SERVICE }}"
          region: "${{ env.REGION }}"
          flags: "--platform=managed --min-instances=0 --allow-unauthenticated"
          image: "${{ steps.tag.outputs.name }}"
          env_vars: |-
            DATABASE_URI=${{ env.DATABASE_URI }}
            PAYLOAD_SECRET=${{ env.PAYLOAD_SECRET }}
            SERVICE_DATABASE=${{ env.SERVICE_DATABASE }}
